{"version":3,"sources":["MyJumbotron.js","MyNavigation.js","Notes.js","Tables.js","App.js","reportWebVitals.js","index.js"],"names":["MyJumbotron","props","Jumbotron","className","Button","variant","onClick","showTab","changeShowTab","MyNavigation","Card","Header","Nav","defaultActiveKey","bg","Item","Link","as","to","Notes","history","useHistory","notes","map","a","i","list","onChange","e","contentChange","target","value","arrayCopy","unshift","content","changeNotes","goBack","Tables","Table","striped","bordered","hover","App","useState","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b350855e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button, Jumbotron} from 'react-bootstrap';\r\nimport './MyJumbotron.scss';\r\n\r\n\r\nfunction MyJumbotron(props) {\r\n    return(\r\n        <Jumbotron className = 'my-jumbotron' >\r\n          <h1>Hello, Surer!</h1>\r\n          <p>\r\n          Your internship applicant, Jaewon here!\r\n          </p>\r\n          <p>\r\n          <Button variant=\"primary\" onClick = {()=> \r\n            props.showTab === 1\r\n            ? props.changeShowTab(0)\r\n            : props.changeShowTab(1)\r\n            }>Surer?</Button>\r\n          <Button variant=\"primary\" onClick = {()=>\r\n                    props.showTab === 2\r\n                    ? props.changeShowTab(0)\r\n                    : props.changeShowTab(2)\r\n            }>Jaewon?</Button>\r\n           </p>\r\n       </Jumbotron>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MyJumbotron;","import React from 'react';\r\nimport {Nav, Card} from 'react-bootstrap';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport './MyNavigation.scss';\r\n\r\nfunction MyNavigation() {\r\n    return (\r\n        <Card className='myNavigation'>\r\n        <Card.Header>\r\n          <Nav variant=\"tabs\" defaultActiveKey=\"#first\" bg=\"dark\">\r\n            <Nav.Item>\r\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link as={Link} to =\"/Note\">Note</Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Card.Header>\r\n      </Card>\r\n\r\n      \r\n    )\r\n    \r\n    \r\n}\r\n\r\nexport default MyNavigation;","import './Notes.scss';\r\nimport React from 'react';\r\nimport {Button, Figure, Table} from 'react-bootstrap';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nfunction Notes(props) {\r\n    let history = useHistory();\r\n    return (\r\n        <div>  \r\n        <h1>Take a note here</h1>\r\n        <hr/>\r\n        { \r\n        props.notes.map((a, i) => \r\n             (\r\n                lists(a)\r\n            )\r\n          ) \r\n          }\r\n        <div className = \"publish\">\r\n          <input onChange = {(e) => {props.contentChange(e.target.value)}}/>\r\n          <div>\r\n          <Button variant = \"info\" onClick = {() => {\r\n            var arrayCopy = [...props.notes];\r\n            arrayCopy.unshift(props.content)\r\n            props.changeNotes(arrayCopy)\r\n          }}>save</Button>\r\n          </div>\r\n        </div>\r\n        <Button variant=\"success\" onClick ={()=>{history.goBack()}}>Go Back to main</Button>{' '}\r\n      </div> \r\n    )\r\n}\r\n\r\nfunction lists(list) {\r\n    return(\r\n        <div>\r\n        <h5>{ list }</h5>\r\n        <p>Committed to Surer</p>\r\n        <hr/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes;","import './Tables.scss';\r\nimport React from 'react';\r\nimport {Table} from 'react-bootstrap';\r\n\r\n\r\nfunction Tables(props) {\r\n            if (props.showTab === 1) {\r\n                return(\r\n                <Table striped bordered hover className='surerTable'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Question</th>\r\n                    <th>Answer</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>1</td>\r\n                    <td>What is Surer?</td>\r\n                    <td>  Surer is a cloud-based, web platform that helps all parties, \r\n                from insurers to agents to financial advisors, in the General Insurance industry automate processes and \r\n                drive network collaborations â€“ to be able to pitch better and close faster.</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Who is Surer looking for?</td>\r\n                    <td>  Surer is looking for a talented and self-driven Frontend Web Engineer who learns fast \r\n                and has the nous to think out-of-the-box - to make a big difference for the Insurance industry and \r\n                empower the parties within this ecosystem; which is Jaewon!</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>3</td>\r\n                    <td>What makes Surer special?</td>\r\n                    <td> Surer possess a first-in-market solution, such as Quote Sourcing System that allows you\r\n                      to get a quote conveniently, or Agent Matching and Referal Interface that allows you go get in touch with\r\n                      Surer 'Referral Circle' and share resources to get the best quote.\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n                )\r\n            } else if (props.showTab === 2) {\r\n                return (\r\n              <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Why should you hire Jaewon, Surer?</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>1</td>\r\n                  <td>Stylish Coding: New React</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>2</td>\r\n                  <td>Stylish Coding: SASS</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>3</td>\r\n                  <td>Promise you the best passion ever!</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>4</td>\r\n                  <td>Quick Learner!</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>5</td>\r\n                  <td>Mr. Renfred Tay's interest in Korean culture!</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>6</td>\r\n                  <td>Experience in business major; good communication skills!</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table> )\r\n            } else {\r\n                return null;\r\n            }\r\n            }\r\nexport default Tables;","import './App.scss';\nimport React, {useState} from 'react';\nimport MyJumbotron from './MyJumbotron';\nimport MyNavigation from './MyNavigation';\nimport {Route} from 'react-router-dom';\nimport Notes from './Notes';\nimport Tables from './Tables';\n\nfunction App() {\n\n  let [notes, changeNotes] = useState(['Hire Jaewon please! :)']);\n  let [content, contentChange] = useState('');\n  let [showTab, changeShowTab] = useState(0);\n\n  return (\n    <div className=\"App\">   \n\n<Route exact path=\"/\"> \n      <MyNavigation/>\n      <MyJumbotron showTab = {showTab} changeShowTab = {changeShowTab} content = {content}/>\n      <Tables showTab = {showTab}/>\n \n  </Route> \n\n  <Route exact path=\"/Note\"> \n<Notes content = {content} changeNotes = {changeNotes} notes = {notes} changeNotes = {changeNotes} contentChange = {contentChange}/>\n  </Route> \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n    <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}